workloads:
  fastapi-app:
    spec:
      apiVersion: score.dev/v1b1
      containers:
        main:
          image: fastapi-app:latest
          livenessProbe:
            httpGet:
              path: /status
              port: 8080
          readinessProbe:
            httpGet:
              path: /status
              port: 8080
          resources:
            limits:
              cpu: 50m
              memory: 200Mi
            requests:
              cpu: 10m
              memory: 50Mi
      metadata:
        name: fastapi-app
      service:
        ports:
          web:
            port: 8080
    file: score.yaml
    instance_suffix: -e8e7afd9e5
resources: {}
shared_state: {}
patching_templates:
  - |
    {{ range $i, $m := .Manifests }}
    {{ if eq $m.kind "Deployment" }}
    - op: set
      path: {{ $i }}.spec.template.spec.affinity
      value:
          affinity:
            podAntiAffinity:
              preferredDuringSchedulingIgnoredDuringExecution:
              - weight: 100
                podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - key: name
                      operator: In
                      values:
                      - fastapi-app
                  topologyKey: "kubernetes.io/hostname"
    {{ end }}
    {{ end }}
  - |
    {{ range $i, $m := .Manifests }}
    {{ if eq $m.kind "Deployment" }}
    - op: set
      path: {{ $i }}.spec.template.spec.securityContext
      value:
        runAsUser: 1000
        runAsGroup: 3000
    {{ range $cname, $_ := $m.spec.template.spec.containers }}
    - op: set
      path: {{ $i }}.spec.template.spec.containers.{{ $cname }}.securityContext
      value:
        allowPrivilegeEscalation: false
    {{ end }}
    {{ end }}
    {{ end }}
  - "{{ range $i, $m := .Manifests }}\n{{ if eq $m.kind \"Deployment\" }}\n{{ range $cname, $_ := $m.spec.template.spec.containers }}\n- op: set\n  path: {{ $i }}.spec.template.spec.containers.{{ $cname }}.startupProbe\n  value:\n    httpGet:\n      path: /status\n      port: 8080 \n    initialDelaySeconds: 15\n    failureThreshold: 20\n    periodSeconds: 5\n    timeoutSeconds: 5\n- op: set\n  path: {{ $i }}.spec.template.spec.containers.{{ $cname }}.livenessProbe\n  value:\n    httpGet:\n      path: /status\n      port: 8080 \n    initialDelaySeconds: 15\n    failureThreshold: 20\n    periodSeconds: 5\n    timeoutSeconds: 5\n{{ end }}\n{{ end }}\n{{ end }}\n"
